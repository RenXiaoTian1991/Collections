package com.edaoyou.collections.activity;import java.util.ArrayList;import org.json.JSONArray;import org.json.JSONException;import org.json.JSONObject;import android.annotation.SuppressLint;import android.content.Intent;import android.graphics.Bitmap;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.text.TextUtils;import android.view.KeyEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.ImageView;import android.widget.LinearLayout;import com.edaoyou.collections.ConstantValue;import com.edaoyou.collections.GlobalParams;import com.edaoyou.collections.R;import com.edaoyou.collections.adapter.LinLangViewFlowAdapter;import com.edaoyou.collections.base.BaseActivity;import com.edaoyou.collections.bean.Guide;import com.edaoyou.collections.bean.Guide.Response.Data;import com.edaoyou.collections.utils.BimpUtil;import com.edaoyou.collections.utils.SharedPreferencesUtils;import com.edaoyou.collections.utils.Util;import com.edaoyou.collections.view.ShareView;import com.etsy.RectFlowIndicator;import com.etsy.ViewFlow;import com.sina.weibo.sdk.api.ImageObject;import com.sina.weibo.sdk.api.TextObject;import com.sina.weibo.sdk.api.WeiboMultiMessage;import com.sina.weibo.sdk.auth.AuthInfo;import com.sina.weibo.sdk.auth.sso.SsoHandler;import com.tencent.connect.share.QQShare;import com.tencent.mm.sdk.modelmsg.WXMediaMessage;import com.tencent.mm.sdk.modelmsg.WXWebpageObject;public class LinLangActivity extends BaseActivity implements OnClickListener {	private LinLangViewFlowAdapter mLinLangViewFlowAdapter;	private ViewFlow linlang_vf;	private LinearLayout linlang_viewflowindiclay;	private ImageView linlang_goto_main_iv;	private ArrayList<Data> mLinLangdatas;	private String mUid;	private String mSid;	private String mGuideUrl;// 引导	private String mGuideLikeUrl; // 点赞	private String mGuideUnLikeUrl;// 取消点赞	private int mClickLikePosition; // 当前点赞的位置	private int mSharePosition; // 当前点赞的位置	private ShareView mShareView;	private SsoHandler mSsoHandler;// 新浪微博api	private AuthInfo mAuthInfo;	public static final int MSG_ONCLICK_LIKE = 1;// 点击了喜欢	public static final int MSG_ONCLICK_SHARE = 2;// 点击了分享	@SuppressLint("HandlerLeak")	private Handler mHandler = new Handler() {		@Override		public void handleMessage(Message msg) {			super.handleMessage(msg);			switch (msg.what) {			case LinLangActivity.MSG_ONCLICK_LIKE:				mClickLikePosition = (Integer) msg.obj;				checkLikeOrCancelLike();				break;			case LinLangActivity.MSG_ONCLICK_SHARE:				mSharePosition = (Integer) msg.obj;				showShareDialog();				break;			default:				break;			}		}	};	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		mGuideUrl = ConstantValue.COMMONURI + ConstantValue.CLIENT_GUIDE;		mGuideLikeUrl = ConstantValue.COMMONURI + ConstantValue.CLIENT_GUIDE_LIKE;		mGuideUnLikeUrl = ConstantValue.COMMONURI + ConstantValue.CLIENT_GUIDE_UNLIKE;		mUid = SharedPreferencesUtils.getInstance(mContext).getString(GlobalParams.USER_UID);		mSid = SharedPreferencesUtils.getInstance(mContext).getString(GlobalParams.USER_SID);		getLinLangData();		startAnimation();	}	@Override	protected int setContentView() {		return R.layout.activity_linlang;	}	@Override	protected void findViews() {		linlang_vf = (ViewFlow) findViewById(R.id.linlang_vf);		linlang_viewflowindiclay = (LinearLayout) findViewById(R.id.linlang_viewflowindiclay);		linlang_goto_main_iv = (ImageView) findViewById(R.id.linlang_goto_main_iv);	}	@Override	protected void setListensers() {		linlang_goto_main_iv.setOnClickListener(this);	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent intent) {		super.onActivityResult(requestCode, resultCode, intent);		if (mSsoHandler != null) {// 新浪微博 SSO 登录授权时，需要加上			mSsoHandler.authorizeCallBack(requestCode, resultCode, intent);		}	}	private void getLinLangData() {		JSONObject guidejsonObject = getGuidejsonObject();		initData(mGuideUrl, guidejsonObject);	}	/**	 * 检查是点赞还是取消点赞	 */	private void checkLikeOrCancelLike() {		String is_like = mLinLangdatas.get(mClickLikePosition).getIs_like();		if ("1".equals(is_like)) {			cancelLike();		} else {			doLike();		}	}	/**	 * 点赞	 */	private void doLike() {		JSONObject likeObject = getLikeObject(mClickLikePosition);		initData(mGuideLikeUrl, likeObject);	}	/**	 * 取消点赞	 */	private void cancelLike() {		JSONObject canceLikeObject = getLikeObject(mClickLikePosition);		initData(mGuideUnLikeUrl, canceLikeObject);	}	@Override	protected void initDataOnSucess(String result, String url, int type) {		super.initDataOnSucess(result, url, type);		if (mGuideUrl.equals(url)) {			paserLinLangJson(result);		} else if (mGuideLikeUrl.equals(url)) {			paserLikeJson(result, url);		} else if (mGuideUnLikeUrl.equals(url)) {			paserLikeJson(result, url);		}	}	/**	 * 获取图鉴引导页 接口 client/guide 请求数据	 * json={"uid":"1","sid":"0123456789ABCDEF0123456789ABCDEF","ver":"1",	 * "request":{"ver":1,"type":"1"} }	 */	private JSONObject getGuidejsonObject() {		JSONObject json = new JSONObject();		JSONObject request = new JSONObject();		try {			request.put("type", "1");			request.put("ver", GlobalParams.ver);			if (TextUtils.isEmpty(mUid)) {				json.put("uid", 0); // 以游客身份获取数据			} else {				json.put("uid", mUid);			}			if (TextUtils.isEmpty(mSid)) {				json.put("sid", ""); // 以游客身份获取数据			} else {				json.put("sid", mSid);			}			json.put("ver", GlobalParams.ver);			json.put("request", request);		} catch (JSONException e) {			e.printStackTrace();		}		return json;	}	private JSONObject getLikeObject(int positino) {		String id = mLinLangdatas.get(positino).getId();		JSONObject json = new JSONObject();		JSONObject request = new JSONObject();		try {			if (TextUtils.isEmpty(mUid)) {				json.put("uid", 0); // 以游客身份获取数据			} else {				json.put("uid", mUid);			}			if (TextUtils.isEmpty(mSid)) {				json.put("sid", ""); // 以游客身份获取数据			} else {				json.put("sid", mSid);			}			request.put("id", id);			json.put("ver", GlobalParams.ver);			json.put("request", request);		} catch (JSONException e) {			e.printStackTrace();		}		return json;	}	private void paserLinLangJson(String result) {		ArrayList<Data> datas = new ArrayList<Data>();		try {			JSONObject obj = new JSONObject(result);			JSONObject responseJSONObject = obj.optJSONObject("response");			JSONArray dataJSONArray = responseJSONObject.optJSONArray("list");			for (int i = 0; i < dataJSONArray.length(); i++) {				JSONObject dataJsonObject = dataJSONArray.getJSONObject(i);				Guide.Response.Data data = new Guide().new Response().new Data();				data.setId(dataJsonObject.optString("id"));				data.setTxt(dataJsonObject.optString("txt"));				data.setUrl1(dataJsonObject.optString("url1"));				data.setUrl2(dataJsonObject.optString("url2"));				data.setUrl3(dataJsonObject.optString("url3"));				data.setLikes(dataJsonObject.optString("likes"));				data.setIs_like(dataJsonObject.optString("is_like"));				data.setMabstract(dataJsonObject.optString("abstract"));				datas.add(data);			}			mLinLangdatas = datas;			refreshListData();		} catch (JSONException e) {			e.printStackTrace();		}	}	private void paserLikeJson(String result, String url) {		try {			JSONObject obj = new JSONObject(result);			JSONObject responseObj = obj.optJSONObject("response");			int status = responseObj.optInt("status");			if (1 == status) {// 返回1 说明点赞或者取消点赞成功。				getLinLangData();			}		} catch (JSONException e) {			e.printStackTrace();		}	}	private void refreshListData() {		if (mLinLangViewFlowAdapter == null) {			mLinLangViewFlowAdapter = new LinLangViewFlowAdapter(mContext, mBitmapUtils, mHandler, mLinLangdatas);			linlang_vf.setAdapter(mLinLangViewFlowAdapter);			linlang_vf.setmSideBuffer(mLinLangdatas.size());			linlang_vf.setSelection(mLinLangdatas.size() * 1000);			int weekDay = Util.getWeekDay() - 1;			linlang_vf.setSelection(weekDay);			linlang_viewflowindiclay.removeAllViews();			RectFlowIndicator viewflowindic = new RectFlowIndicator(mContext);			viewflowindic.setFillColor(mContext.getResources().getColor(R.color.red));			viewflowindic.setInactivePaintStyle();			viewflowindic.setProperty(mContext.getResources().getDimension(R.dimen.radius), getResources().getDimension(R.dimen.circleSeparation2),					getResources().getDimension(R.dimen.activeRadius), 0, false);			linlang_viewflowindiclay.addView(viewflowindic);			linlang_vf.setFlowIndicator(viewflowindic);		} else {			mLinLangViewFlowAdapter.setData(mLinLangdatas);			mLinLangViewFlowAdapter.notifyDataSetChanged();		}	}	private void showShareDialog() {		if (mShareView == null) {			mShareView = new ShareView(this);			mAuthInfo = new AuthInfo(this, GlobalParams.WEI_BO_APP_KEY, GlobalParams.WEI_BO_REDIRECT_URL, GlobalParams.WEI_BO_SCOPE);			mSsoHandler = new SsoHandler(this, mAuthInfo);		}		mShareView.setQQData(getShareQQData());		mShareView.setWeiXinData(getShareWeiXinData());		mShareView.setWeiboData(mSsoHandler, mAuthInfo, getShareWeiBoData());		mShareView.show(false, ShareView.NO_REPROT);	}	private Bundle getShareQQData() {		Bundle bundle = new Bundle();		String shareUrl = getShareUrl(false);		// 这条分享消息被好友点击后的跳转URL。		bundle.putString(QQShare.SHARE_TO_QQ_TARGET_URL, shareUrl);		// 分享的标题。注：PARAM_TITLE、PARAM_IMAGE_URL、PARAM_ SUMMARY不能全为空，最少必须有一个是有值的。		String txt = mLinLangdatas.get(mSharePosition).getTxt();		bundle.putString(QQShare.SHARE_TO_QQ_TITLE, "我分享了\"琳琅轅\"的" + txt + "，快来围观!");		// 分享的图片URL		String imgUrl = mLinLangdatas.get(mSharePosition).getUrl1();		bundle.putString(QQShare.SHARE_TO_QQ_IMAGE_URL, imgUrl);		// 分享的消息摘要，最长50个字		bundle.putString(QQShare.SHARE_TO_QQ_SUMMARY, mLinLangdatas.get(mSharePosition).getTitle());		// 手Q客户端顶部，替换“返回”按钮文字，如果为空，用返回代替		bundle.putString(QQShare.SHARE_TO_QQ_APP_NAME, "藏家");		// 标识该消息的来源应用，值为应用名称+AppId。		bundle.putString(QQShare.SHARE_TO_QQ_KEY_TYPE, "藏家" + GlobalParams.QQ_APP_ID);		return bundle;	}	private WXMediaMessage getShareWeiXinData() {		WXMediaMessage msg = new WXMediaMessage();		String imgUrl = mLinLangdatas.get(mSharePosition).getUrl1();		Bitmap bitmapFromDiskCache = mBitmapUtils.getBitmapFromCache(imgUrl);		byte[] arr = BimpUtil.bmpToByteArray(bitmapFromDiskCache);		msg.thumbData = arr;		String txt = mLinLangdatas.get(mSharePosition).getTxt();		msg.title = "我分享了\"琳琅轅\"的" + txt + "，快来围观!";		msg.description = mLinLangdatas.get(mSharePosition).getTitle();		WXWebpageObject web = new WXWebpageObject();		String shareUrl = getShareUrl(true);		web.webpageUrl = shareUrl;		msg.mediaObject = web;		return msg;	}	private WeiboMultiMessage getShareWeiBoData() {		// 1. 初始化微博的分享消息		WeiboMultiMessage weiboMessage = new WeiboMultiMessage();		// 文字		TextObject textObject = new TextObject();		String shareUrl = getShareUrl(false);		String txt = mLinLangdatas.get(mSharePosition).getTxt();		String shareText = "我分享了\"琳琅轅\"的" + txt + "，快来围观!";		textObject.text = shareText + shareUrl;		weiboMessage.textObject = textObject;		// 图片		ImageObject imageObject = new ImageObject();		String imgUrl = mLinLangdatas.get(mSharePosition).getUrl1();		Bitmap bm = BimpUtil.compressImage(mBitmapUtils.getBitmapFromCache(imgUrl));		imageObject.setImageObject(bm);		weiboMessage.imageObject = imageObject;		return weiboMessage;	}	/**	 * http://182.92.195.162:8088/wap.php?r=wap/share/index&id=12&type=1&key	 * =46f94c8de14fb36680850768ff1b7f2a&lang=zh-cn type 1 琳琅 2 feed照片详情 3 资讯 4	 * 活动 5 App分享 key 反转id	 */	private String getShareUrl(boolean isShareToWeiXin) {		String id = mLinLangdatas.get(mSharePosition).getId();		String reverseId = Util.reverseString(id); // 1.反转字符串		String MD5key = Util.md5(reverseId).toLowerCase();// 2.md5加密		String finalKey = Util.reverseString(MD5key).toLowerCase();// 3.反转md5		String url;		if (isShareToWeiXin) {			url = ConstantValue.SHARE + "&id=" + id + "&type=2&key=" + finalKey + "&lang=zh-cn&channel=wx";		} else {			url = ConstantValue.SHARE + "&id=" + id + "&type=2&key=" + finalKey + "&lang=zh-cn";		}		return url;	}	private void gotoMainActivity() {		setUserLoginState();		Intent intent = new Intent(LinLangActivity.this, MainActivity.class);		startActivity(intent);		LinLangActivity.this.finish();		overridePendingTransition(R.anim.fade_in, R.anim.welcome_out);	}	private void setUserLoginState() {		SharedPreferencesUtils.getInstance(LinLangActivity.this).saveBoolean(GlobalParams.IS_FIRST_LOGIN, false);		SharedPreferencesUtils.getInstance(LinLangActivity.this).saveBoolean(GlobalParams.IS_FIRST_REGIESTER_LOGIN, false);	}	private void startAnimation() {		Animation mScaleAnimation = AnimationUtils.loadAnimation(this, R.anim.loop_scale);		linlang_goto_main_iv.startAnimation(mScaleAnimation);	}	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		if (keyCode == KeyEvent.KEYCODE_BACK) {			gotoMainActivity();			return true;		}		return super.onKeyDown(keyCode, event);	}	@Override	public void onClick(View view) {		switch (view.getId()) {		case R.id.linlang_goto_main_iv:			gotoMainActivity();			break;		default:			break;		}	}}