package com.edaoyou.collections.activity;import java.util.ArrayList;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.content.IntentFilter;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.KeyEvent;import android.view.View;import android.view.View.OnClickListener;import android.widget.TextView;import com.easemob.chat.EMChat;import com.easemob.chat.EMChatManager;import com.edaoyou.collections.R;import com.edaoyou.collections.adapter.HomePagerAdapter;import com.edaoyou.collections.base.BaseActivity;import com.edaoyou.collections.base.BaseFragment;import com.edaoyou.collections.fragment.ChatAllHistoryFragment;import com.edaoyou.collections.fragment.ChoicenessAndFriendsFragment;import com.edaoyou.collections.fragment.NotificationFragment;import com.etsy.XViewPager;public class ChatAndNotificationActivity extends BaseActivity implements OnClickListener {	private NewMessageReceiver mNewMessageReceiver;	private XViewPager chet_notification_vp;	private HomePagerAdapter mAdapter;	private TextView chet_tv;	private TextView notification_tv;	private ArrayList<BaseFragment> mFragments = new ArrayList<BaseFragment>();	private boolean mIsNewPage;	private int mCurrentPage;	@Override	protected void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);		initFragments();	}	private void initFragments() {		mFragments.add((BaseFragment) Fragment.instantiate(mContext, ChatAllHistoryFragment.class.getName(), null));		mFragments.add((BaseFragment) Fragment.instantiate(mContext, NotificationFragment.class.getName(), null));		mAdapter = new HomePagerAdapter(getSupportFragmentManager(), mFragments);		chet_notification_vp.setOffscreenPageLimit(mFragments.size());		chet_notification_vp.setAdapter(mAdapter);		chet_notification_vp.setCurrentItem(0);	}	@Override	protected int setContentView() {		return R.layout.activity_chat_notification;	}	@Override	protected void findViews() {		chet_notification_vp = (XViewPager) findViewById(R.id.chet_notification_vp);		chet_tv = (TextView) findViewById(R.id.chet_tv);		notification_tv = (TextView) findViewById(R.id.notification_tv);	}	@Override	protected void setListensers() {		notification_tv.setOnClickListener(this);		chet_tv.setOnClickListener(this);		chet_notification_vp.setOnPageChangeListener(new MyOnPageChangeListener());	}	@Override	protected void onPause() {		super.onPause();	}	@Override	protected void onResume() {		super.onResume();	}	@Override	protected void onStart() {		super.onStart();		registerNewMessageReceiver();	}	@Override	protected void onStop() {		super.onStop();		try {			unregisterReceiver(mNewMessageReceiver);			mNewMessageReceiver = null;		} catch (Exception e) {		}	}	@Override	protected void onDestroy() {		super.onDestroy();	}	private void changeTab() {		if (mCurrentPage == 0) {			chet_tv.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.nav_highlighted));			notification_tv.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.nav_normal));			chet_tv.setTextColor(mContext.getResources().getColor(R.color.white));			notification_tv.setTextColor(mContext.getResources().getColor(R.color.red));		} else {			chet_tv.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.nav_normal));			notification_tv.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.nav_highlighted));			chet_tv.setTextColor(mContext.getResources().getColor(R.color.red));			notification_tv.setTextColor(mContext.getResources().getColor(R.color.white));		}	}	private void registerNewMessageReceiver() {		mNewMessageReceiver = new NewMessageReceiver();		IntentFilter intentFilter = new IntentFilter(EMChatManager.getInstance().getNewMessageBroadcastAction());		intentFilter.setPriority(4);		registerReceiver(mNewMessageReceiver, intentFilter);		EMChat.getInstance().setAppInited();	}	public void refreshUI() {		ChatAllHistoryFragment chatAllHistoryFragment = (ChatAllHistoryFragment) mFragments.get(0);		if (chatAllHistoryFragment != null) {			chatAllHistoryFragment.refreshUI();		}	}	@Override	public void onClick(View view) {		switch (view.getId()) {		case R.id.chet_tv:			chet_notification_vp.setCurrentItem(0);			break;		case R.id.notification_tv:			chet_notification_vp.setCurrentItem(1);			break;		default:			break;		}	}	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		if (keyCode == KeyEvent.KEYCODE_BACK) {			finish();			overridePendingTransition(R.anim.fade_in, R.anim.push_left_out);			return true;		}		return super.onKeyDown(keyCode, event);	}	private class MyOnPageChangeListener implements OnPageChangeListener {		@Override		public void onPageSelected(int position) {			mIsNewPage = true;			mCurrentPage = position;		}		@Override		public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {		}		@Override		public void onPageScrollStateChanged(int arg0) {			switch (arg0) {			case ViewPager.SCROLL_STATE_IDLE:				if (mIsNewPage) {					mIsNewPage = false;					loadData(mCurrentPage);					changeTab();				}				break;			case ViewPager.SCROLL_STATE_DRAGGING:				break;			case ViewPager.SCROLL_STATE_SETTLING:				break;			default:				break;			}		}	}	private void loadData(int currentPage) {		if (currentPage == 0) {			ChatAllHistoryFragment chatAllHistoryFragment = (ChatAllHistoryFragment) mAdapter.getItem(currentPage);			chatAllHistoryFragment.getChatListData();		} else {			NotificationFragment notificationFragment = (NotificationFragment) mAdapter.getItem(currentPage);			notificationFragment.getNotificationData();		}	}	/**	 * 新消息广播接收者	 */	private class NewMessageReceiver extends BroadcastReceiver {		@Override		public void onReceive(Context context, Intent intent) {			abortBroadcast();			refreshUI();		}	}}